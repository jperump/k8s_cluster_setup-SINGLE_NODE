---
- hosts: all
  become: yes
  gather_facts: No
  tasks:
    - name: Update all packages to their latest version
      apt:
        name: "*"
        state: latest
    - name: Install python and dependencies
      apt:
        pkg:
        - python
        - software-properties-common
    - name: Letting iptables see bridged traffic
      shell:
        cmd: |
          cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
          br_netfilter
          EOF

          cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          EOF
          sudo sysctl --system
    - name: Install Docker dependencies
      apt:
        pkg:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg2
        - lsb-release
    - name: Add Docker's official GPG key
      ignore_errors: yes
      shell: >
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    - name: setting up 'stable' repository
      shell: >
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - name: Install Docker engine
      apt:
       pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
       update_cache: yes
    - name: Configure the Docker daemon, in particular to use systemd for the management of the containerâ€™s cgroups. Then enable Docker and reload daemon
      shell:
        cmd: |
            mkdir /etc/docker
            cat <<EOF | sudo tee /etc/docker/daemon.json
            {
              "exec-opts": ["native.cgroupdriver=systemd"],
              "log-driver": "json-file",
              "log-opts": {
                "max-size": "100m"
              },
              "storage-driver": "overlay2"
            }
            EOF
            systemctl enable docker
            systemctl daemon-reload
            systemctl restart docker
    - name: Download the Google public signing key and add the Kubernetes apt repository
      shell: |
            curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
            echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    - name: Install kubelet, kubeadm and kubectl
      apt:
       pkg:
        - kubelet
        - kubeadm
        - kubectl
       update_cache: yes
    - name: Hold kubelet
      dpkg_selections:
        name: kubelet
        selection: hold
    - name: Hold kubeadm
      dpkg_selections:
        name: kubeadm
        selection: hold
    - name: Hold kubectl
      dpkg_selections:
        name: kubectl
        selection: hold
    - name: Initialize the cluster
      ignore_errors: yes
      shell: >
            kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.47.1
    - name: setting up Kube Config
      become: no
      shell: |
            mkdir -p /home/vagrant/.kube
            sudo cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
            sudo chown vagrant:vagrant /home/vagrant/.kube/config
    - name: Install pod network addon -WeaveNet in this case.
      become: no
      shell: >
            kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"




         
